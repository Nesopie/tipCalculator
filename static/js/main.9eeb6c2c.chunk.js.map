{"version":3,"sources":["component.js","App.js","index.js"],"names":["Container","props","className","htmlFor","type","name","placeholder","id","onChange","handleBillText","onClick","handleTipPercent","handleCustomTipPercent","handlePeople","App","useState","undefined","tipPercent","setTipPercent","numberOfPeople","setNumberOfPeople","bill","setBill","useEffect","console","log","tipPerPerson","document","querySelector","currentTip","Math","trunc","innerText","e","btn","target","slice","length","isNaN","value","targe","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9eeb6c2c.chunk.js","sourcesContent":["const Container = (props) => {\n    return (\n        <div className=\"container\">\n            <header>\n                <div className=\"title\">\n                    <div className=\"titleTop\">S P L I</div>\n                    <div className=\"titleBot\">T T E R</div>\n                </div>\n            </header>\n            <div className=\"component\">\n                <div className=\"input\">\n                    <div className=\"bill\">\n                        <label htmlFor=\"bill\">Bill</label>\n                        <input type=\"text\" name=\"bill\" placeholder=\"0\" id=\"bill\" onChange={props.handleBillText}/>\n                    </div>\n                    <div className=\"tip\">\n                        <label htmlFor=\"tip\">Select Tip %</label>\n                        <div className=\"btnContainer\" id=\"tip\">\n                            <button type=\"button\" onClick={props.handleTipPercent} name=\"button\">5%</button>\n                            <button type=\"button\" onClick={props.handleTipPercent} name=\"button\">10%</button>\n                            <button type=\"button\" onClick={props.handleTipPercent} name=\"button\">15%</button>\n                            <button type=\"button\" onClick={props.handleTipPercent} name=\"button\">25%</button>\n                            <button type=\"button\" onClick={props.handleTipPercent} name=\"button\">50%</button>\n                            <input type=\"text\" onChange={props.handleCustomTipPercent} name=\"custom\" placeholder=\"Custom\" id=\"custom\"/>\n                        </div>\n                    </div>\n                    <div className=\"numberOfPeople\">\n                        <label htmlFor=\"number\">Number of People</label>\n                        <input type=\"text\" name=\"number\" placeholder=\"0\" id=\"number\" onChange={props.handlePeople}/>\n                    </div>\n                </div>\n                <div className=\"display\">\n                    <div className=\"amount\">\n                        <div className=\"amountLabel\">\n                            <div className=\"tipAmount\">Tip Amount</div>\n                            <div className=\"perPerson\">/ person</div>\n                        </div>\n                        <div className=\"amountDisplay\">$0</div>\n                    </div>\n                    <div className=\"total\">\n                        <div className=\"totalLabel\">\n                            <div className=\"totalText\">Total</div>\n                            <div className=\"perPerson\">/ person</div>\n                        </div>\n                        <div className=\"totalAmountDisplay\">$0</div>\n                    </div>\n                    <div className=\"reset\">\n                        <button type=\"submit\" name=\"button\">RESET</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Container;\n","import Component from './component.js';\nimport { useState, useEffect} from 'react';\n\nfunction App() {\n    const [tipPercent, setTipPercent] = useState(undefined);\n    const [numberOfPeople, setNumberOfPeople] = useState(undefined);\n    const [bill, setBill] = useState(undefined);\n\n    const handleTipPercent = (e) => {\n        const btn = e.target;\n        setTipPercent(btn.innerText.slice(0, btn.innerText.length - 1));\n    }\n\n    const handleCustomTipPercent = (e) => {\n        console.log(e.target);\n        if(isNaN(+e.target.value)) {\n            e.target.value = e.target.value.slice(0, e.targe.value.length - 1);\n        }else {\n            setTipPercent(e.target.value);\n        }\n    }\n\n    const handleBillText = (e) => {\n        if(isNaN(+e.target.value)) {\n            e.target.value = e.target.value.slice(0, e.target.value.length - 1);\n        }else {\n            setBill(e.target.value);\n        }\n    }\n\n    const handlePeople = (e) => {\n        if(isNaN(+e.target.value)) {\n            e.target.value = e.target.value.slice(0, e.target.value.length - 1);\n        }else {\n            setNumberOfPeople(e.target.value);\n        }\n    }\n\n    useEffect(() => {\n        console.log(tipPercent, numberOfPeople, bill);\n        console.log(\"-------\");\n        if(tipPercent && numberOfPeople && bill) {\n            let tipPerPerson = document.querySelector(\".amountDisplay\");\n            let currentTip = Math.trunc((((tipPercent/100)*bill)/numberOfPeople)*100)/100;\n            tipPerPerson.innerText = \"$\" + Math.trunc((((tipPercent/100)*bill)/numberOfPeople)*100)/100;\n\n            let totalTip = document.querySelector(\".totalAmountDisplay\");\n            totalTip.innerText = \"$\" + Math.trunc(((bill / numberOfPeople) + currentTip) * 100) / 100;\n        }\n    }, [tipPercent, numberOfPeople, bill])\n\n    return <Component\n        handleTipPercent={handleTipPercent}\n        handleBillText={handleBillText}\n        handlePeople={handlePeople}\n        handleCustomTipPercent={handleCustomTipPercent}/>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}